// https://github.com/getkalido/samui-server/blob/develop/proto/kalido.proto

syntax = "proto3";

/*
    Naming convention:
    Messages, Services, Enums and Packages: TestCase
    enum members: phoneNumber
    rpcFunctions: getPhoneNumber
    message properties: phoneNumber
*/

import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "me.kalido.kalidogrpc";
option java_outer_classname = "KalidoServiceProto";
option objc_class_prefix = "KLD";

package KalidoV1_0_0;

service Service {
    rpc auth(Auth) returns (Status) {}

    // Returns the users Nearby stream
    rpc streamNearby(Options) returns (stream Stream) {}

    rpc duplexStreamNearby(stream Options) returns (stream Stream) {}
}

message Auth {
    string token = 1;
    string deviceId = 2;
}

message Status {
    bool success = 1;
}

// Used by the client to define how they want the server to give them data
message Options {
    int32 pageSize = 1; // how many object you want per page
    int32 pageNumber = 2; // what page you want
    repeated Identifier pageItems = 3; // Array of objects that you already have
}

// Identify a certain item and its version
message Identifier {
    int64 id = 1;
    uint32 version = 2;
    uint32 order = 3;
}

// An action that must be performed by front end
message Action {
    enum ActionType {
        nothing = 0;
        insert = 1;
        update = 2;
        delete = 3;
        reorder = 4;
    }

    ActionType action = 1;
    Identifier item = 2;
    google.protobuf.Any payload = 3;
}

// Generic stream definition
message Stream {
    repeated Action actions = 1;
}

// Nearby data
message Nearby {
    enum UserType {
        phone = 0;
        kalido = 1;
        oneWay = 2;
        prompt = 3;
        match = 4;
        user = 5;
        deleted = 6;
    }

    int64 user_id = 1;
    UserType type = 2;
    string firstname = 3;
    string lastname = 4;
    string profilePhotoUrl = 5;
    string location = 6;
    int64 locationFreshness = 7;
    int64 kvalue = 8;
    bool blocked = 9;
    int64 blockedTimestamp = 10;
    bool locationBlocked = 11;
    int64 locationBlockedTimestamp = 12;
    string matchString = 13;
    bool hasCommonContacts = 14;
    bool allowOneWayContact = 15;
    bool inverseBlocked = 16;
    int64 userFreshness = 17;
    string locationSearchString = 18;
    string promptContactFirstname = 19;
    string promptContactLastname = 20;
    int32 serverOrder = 21;
    uint32 version = 22;
}
